# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Docker Hub image that `container-job` executes in
    container: postgres

    # Service containers to run with `build`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:15
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@3
        with:
          python-version: "3.10"

      - name: Run linter
        uses: chartboost/ruff-action@v1

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-dependency ruff httpx
          pip install -r requirements.txt

      - name: Test database access
        run: |
          pytest tests/test_database.py

      - name: Test backend
        run: |
          pytest tests/test_main.py
